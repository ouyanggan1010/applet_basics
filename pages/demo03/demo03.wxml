<!-- 1.text相当于web中span标签，行内元素
2.view相当于web中的div标签，块级元素
3.checkbox相当于web中的复选框标签  disabled  checked=true/false  color勾的颜色  value选中后的值 -->
<text>1</text>
<text>2</text>
<view>1</view>
<view>2</view>
<!-- 1 字符串 -->
<view>{{msg}}</view>
<!-- 2 数字类型 -->
<view>{{num}}</view>
<!-- 3 布尔类型 -->
<view>性别：{{isGirl ? '女孩' : '男孩'}}</view>
<!-- 4 Object类型 -->
<view>{{person.age}}</view>
<view>{{person.height}}</view>
<view>{{person.weight}}</view>
<view>{{person.nane}}</view>
<!-- 5 在标签的属性中使用 -->
<view data-num="{{num}}">自定义属性</view>
<!-- 6 使用布尔类型充当属性 checked表示当前复选框是否选中
    注意：字符串和花括号之间一定不要存在空格，否则会导致识别失败
          失败例子：<checkbox checked=" {{isChecked}}"></checkbox> -->
<view>
    <checkbox value="" checked="{{isChecked}}" color="red"></checkbox>
</view>
<!-- 7 运算=>表达式
       7.1可以再花括号中加入表达式--"语句"；
       7.2表达式
          指的是一些简单的运算：数字运算，字符串拼接，逻辑运算
          数字的加减
          字符串拼接
          三元表达式
       7.3语句（花括号中不能直接加语句）
          复杂的代码段
            if else
            switch
            do while
            for -->
<!-- 2 -->
<view>{{1+1}}</view>
<!-- 11 -->
<view>{{"1"+"1"}}</view>
<!-- 奇数 -->
<view>{{11%2 === 0 ? "偶数" : "奇数"}}</view>
<!-- 8 列表循环
       8.1 wx:for="{{数组或对象}}" wx:for-item="循环项的名称"（可省略，默认值是item） wx:for-index="循环项的索引"（可省略，默认值是index）
       8.2 wx:key="唯一的值" 用来提高列表渲染的性能，不可以是"循环项的名称.属性名"，而是直接wx:key="属性名"
          8.2.1 wx:key 绑定一个普通字符串的时候，那么这个字符串肯定是循环数组中的对象的唯一属性并且是唯一的值
          8.2.2 wx:key = "*this" 就表示数组是一个普通的数组，"*this"表示是数组的循环项
               普通数组：[1,7,3,0]
       8.3 当出现数组的嵌套循环的时候，尤其要注意，以下绑定的名称不要重名
       wx:for-item="循环项的名称"；wx:for-index="循环项的索引" -->
<view>
    <!-- 没有wx:key会报错 -->
    <!-- <view wx:for="{{lists}}">
      索引：{{index}}----值：{{item.name}}
    </view> -->
    <!-- 最好是每个循环都写key值 -->
    <view wx:for="{{lists}}" wx:key="id">索引：{{index}}----值：{{item.name}}</view>
    <!-- 嵌套循环 -->
    <view wx:for="{{lists}}" wx:for-item="list" wx:for-index="index1" wx:key="id">
        索引1：{{index1}}----值：{{list.name}}
        <view wx:for="{{list.arrys}}" wx:for-item="arry" wx:for-index="index2" wx:key="index2">
            索引2：{{index2}}----值：{{arry}}
        </view>
    </view>
</view>
<!-- 9 对象循环
        9.1 wx:for="{对象}" wx:for-item="对象的值" wx:for-index="对象的属性"
        9.2 循环对象的时候最好是将item与index都修改一下
        wx:for-item="value" wx:for-index="key" -->
<view style="margin-top:20px">
    <view wx:for="{{person}}" wx:for-item="value" wx:for-index="key" wx:key="index">
        属性：{{key}}----值：{{value}}
    </view>
</view>
<!-- 10 block
        10.1 占位符的标签
        10.2 写代码的时候，可以看到这个标签存在
        10.3 页面渲染时，小程序会把它移除掉，只有内容，没有标签
        10.4 当只需要循环数据出来，而不需要标签的情况下，可以用block来做占位符 -->
<view style="margin-top:20px">
    <block wx:for="{{lists}}" wx:key="id" class="my_list">索引：{{index}}----值：{{item.name}}</block>
</view>
<!-- 11 条件渲染
        11.1 wx:if="{{true/false}}"
        11.2 if, else, else if
            wx:if, wx:elif, wx:else
        11.3 hidden 在标签上直接加入属性
             hidden="{{true/false}}" 为true表示隐藏，为false表示显示
        11.4 什么场景下用哪个？
             当标签不是频繁切换显示的时候，优先使用wx:if
               (直接把标签从页面结构给移除掉)
             当标签频繁的切换显示的时候，优先使用hidden
               (通过添加样式的方式来切换显示，hidden不要与display一起使用，不然会覆盖display:none) -->
<view style="margin-top:20px">
    <view wx:if="{{false}}">隐藏</view>
    <view wx:if="{{true}}">显示</view>
    <!-- wx:elif wx:else -->
    <view wx:if="{{false}}">1</view>
    <view wx:elif="{{false}}">2</view>
    <view wx:else="{{true}}">3</view>
    <!-- hidden -->
    <view hidden>hidden1</view>
    <view hidden="{{false}}">hidden2</view>
    <!-- wx:if与hidden的区别 -->
    <view>--------------------------</view>
    <view wx:if="{{false}}">wx:if</view>
    <view hidden="{{false}}">hidden</view>
</view>